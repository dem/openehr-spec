h1. 7 Безопасность и Конфиденциальность

h2. 7.1 Требования 

**Безопасность, конфиденциальность и согласия**
Безопасность (возможность ограничить тех, кто смотрит персональные данные) и конфиденциальность (обязательство  других уважать персональные данные) главная проблема отношений пользователей к системам ЕМК. Общепринято что предоставленная информация (либо непосредственно, либо через обследования, либо через анализ образцов) доверяется пациентом медицинским специалистом в процессе медицинского случая должна быть передана или быть доступна с согласия пациента; проще говоря: __обмен данных должен контролироваться согласием пациента__. Более комплексные требования для некоторых пациентов позволяет разграничить доступ  __к частям__ его ЭМК, для примера, относительно открытые права доступа для большинства медицинских записей, но ограничен доступ к информации о сексуальном здоровье и психических заболеваний. 
Взаимосвязанность медицинской информации может этот затруднить. Для примера список назначенных медицинских препаратов зависит от условия скрыт ли диагноз, который нужен для предоставления безопасного лечения, и многие медицинские работники необходимо видеть невозможность текущих назначений(и аллергии), и это весьма проблематично даже для базового хода.

**Требования медицинских учреждений**
С другой стороны, клинические специалисты оказывая помощь, хотят быстрый доступ к относящимся к пациенту данным, и должны быть уверенны что то, что они видят на экране должно точно передавать 
уверен, что то, что они видят на экране точное это именно то что до них было внесено в систему о пациенте.  
Персоналу оказывающий уход иногда необходим экстренный доступ к медицинским записям (случаи не относящиеся к повседневному уходу); на такой доступ должно быть общее согласие, т.к. не известно когда он может понадобиться.

Исследователи в области здравоохранения часто хотят доступ к данным большого числа людей с целью оценки качества ухода и его улучшения (исследование состояния клиник) и для целей изучения. Обеспечение эффективной помощи и поддержки текущих медицинских исследований, следовательно, должны функционировать в системе с позволения пациента.

**Настройка контроля доступа**
В теории права доступа к информации должны легко настраиваться пациентом или клиническим специалистом. В некоторых случаях это может быть сделано прямым назначение, на пример пациент может указать своего постоянного врача общей практики. Потенциально могут быть сделаны исключения для такого способа, например если у пациента плохие личные отношения с прошлым доктором. 

Однако вскоре становиться трудно каждый раз определять конкретного человека который имеет доступ, особенно если человеку нужно обратиться в больницу, где много персонала и/или нет предварительно установленных связей. Появление системы электронного назначения и электронных аптек принесет еще больше медицинских и близких с медициной сотрудников в матрицу электронного здоровья, что делает систему индивидуального назначения прав невозможной. Более того, существует большая и постоянно растущая категория "очень мобильных" людей (военных, артистов, работников неправительственных организаций, международных бизнесменов, спортсменов... ) которые не могут предсказать даже страну в которой им может понадобиться помощь. В результате, необходимость указывать права доступа по наименованию или по роли неизбежно.

**Проблема ролей**
Одной из сложных задач для осуществления контроля доступа к медицинской информации является определение «ролей», т.е. статус пользователей медицинской записи при предоставленном доступе. Важно, чтобы роли были установлены заранее. Например, ярлыки "медсестра", "врач общей практики" и "психиатр" могут относительно легко присваивается конкретным лицам. Разные типы ярлыков могут иметь больший приоритет для различения между (для примера) главным лечащим врачем, других медицинских сотрудников(медицинских сестер, сиделок) и вспомогательного персонала(например, патологоанатомов, рентгенологов). При взгляде на мир под призмой услуго-ориентированных медицинских услуг, профессиональных уровень медицинских специалистов является менее важным, чем личное отношение пациента к процессу его лечения.

Это не всегда ясно как люди могут в любой момент могут находятся в любой из этих категорий, или как эти термины могут быть определены в разным местах и странах. Реально, оценка категории ролей, такие как "ухаживающий персонал", в частности медсестра в отделении должны определяться в медицинской организации каждый день, а не в медицинской карте пациента. Решение о доступе к информации в медицинской карте должно зависеть от знаний поставщика услуг о своем персонале, который вовлечен в уход за пациентом.

Контроль доступа основанный на роли осложняется фактом временной замены по причине болезни  или отпуска, или роль изменяется в связи с нехваткой персонала. Кроме того, если у врача есть секретарь, то и для него требуется доступ и возможность обновления его секретной части (относящейся к лечению пациента) информации, т.е. доступ на самом высоком уровне нужно дать кому-то без медицинского образование или непосредственно связанного с помощью пациенты, даже если только в течение 10 минут. Любая ролевая система учитывет суровую реальность медицинской помощи в мире, а не исключительно теоретические принципы.

**Удобство использования**
Удобство использования механизмов безопасности и конфиденциальности является ключевым требованием к архитектуре медицинских записей. Некоторые элегантные решения точного контроля доступа разработанные экспертами по безопасности не пригодны для использования в связи с тем что занимают слишком много времени для изучения их пациентом или доктором, либо слишком много времени чтобы их выполнять, или же слишком сложны чтобы их возможно было использовать в программном обеспечении.

В следующих разделах описана поддержка требований медицинской карты к основам безопасности и конфиденциальности в openEHR.

h2. 7.2 Угрозы Безопасности и Конфиденциальности

Любая модель, такая как безопасность и конфиденциальность, поддерживаямая электронной историей болезни, должна основываться на понимании предполагаемых угроз. Не в даваясь в подробности, угрозы безопасност учтеные в openEHR включают в себя (здесь "неуместным" является все, на что не было или не будет согласия пациента):

* человеческие ошибки в идентификации пациентов, что приводит к неправильным объединение данных о состоянии здоровья одного пациента с другим. Неправельная идентификация может привести к тому, что данные одного пациента попадаут в медицинскую карту другого пациента (что приводит к нарушении конфиденциальности и, возможно, клинических ошибок), или созданию новой карты, вместо записи в существующую (что приведет к появлению двух и более неполных карт);
* несанкционированный доступ со стороны врачей или других работников зравохранения (в том числе любой работник больницы) неучаствующим в уходе за пациентов в данный момент;
* несанеционированный доступ других лиц, знающих пациента, например, челенов семьи;
* несанкционированный доступ к медицинским данным корпораций или других организаций, напрмер, в цели страховой дескриминации;
* вредоносная кража или доступ к медицинским данным (например, знаминитостей или политикам) с целью получения прибыли или иных личных побуждений;
* общие угрозы целостности данных и их доступности, такие как вирусы, черви, атаки отказа в обслуживании;
* сбои в програмном обеспечении (в результате ошибок, неправельной конфигурации, ошибки взаимодействия и т.д.) вызывающие искажение данных или неправельное отображение иди вычисления в результате критических проблем.

Главное при проектирвоании дизайн мезанизмов поддержки безопасности, конфиденциальности и целостности данных нужно иметь ввиду: вероятность того или иного метода несанционированного доступа пропрорционально ценности информации и обратно пропорционально стоимости доступа.
Перефразиру писмо в БАМ Росс Анедрсона[7.2] в безопасности клинических данный, для получения доступа, преступник попробует найти простейший, дешевый и быстры способ, что в большенстве случаев будет подкуп или кража с взломом, чем технологии в стиле Джеймса Бонда. openEHR позволяет использовать эти принципы путем относительно простых механизмов, которые дешевы в реализации, но делает злоупотребелене довольно сложным, без ущерба для доступности. 

fn7.2. см. например, Ross Anderson - "Security in Clinical Information Systems" по адресу "http://www.cl.cam.ac.uk/users/rja14/policy11/policy11.html":http://www.cl.cam.ac.uk/users/rja14/policy11/policy11.html.

h2. 7.3 Solutions Provided by openEHR

h3. 7.3.1 Overview

Many of the concrete mechanisms relating to security and privacy are found in system deployments rather than in models such as openEHR, particularly the implementation of authentication, access control, and encryption. The openEHR specifications and core component implementations do not explicitly define many concrete mechanisms since there is great variability in the requirements of different sites - secure LAN deployments many require minimal security inside, whereas web-accessible ealth record servers are likely to have quite different requirements. What openEHR does is to support some of the key requirements in a flexible enough way that deployments with substantially different requirements and configurations can nevertheless implement the basic principles in a standard way. FIGURE 21 illustrates the main security measures directly specified by the openEHR architecture. These include EHR/demographic separation and an EHR-wide access control object. At the level of versioned objects, commit audits (mandatory), digital signatures and hashes are available. The following subsections describe these features in more detail.

!fig21.png(FIGURE 21)!

h3. 7.3.2 Security Policy

In and of itself, the openEHR EHR imposes only a minimal security policy profile which could be regarded as necessary, but generally not sufficient for a deployed system (i.e. other aspects would still need to be implemented in layers whose semantics are not defined in openEHR). The following policy principles are embodied in openEHR.

**General**

- Indelibility := health record information cannot be deleted; logical deletion is achieved by marking the data in such a way as to make it appear deleted (implemented in version control).
- Audit trailing := All changes made to the EHR including content objects as well as the EHR status and access control objects are audit-trailed with user identity, time-stamp, reason, optionally digital signature and relevant version information; one exception is where the modifier is the patient, in which case, a symbolic identifier can be used (known as @PARTY_SELF@, in openEHR; see next point).
- Anonymity :=  the content of the health record is separate from identifying demographic information. This can be configured such that theft of the EHR provides no direct clue to the identity of the owning patient (indirect clues are of course harder to control). Stealing an identified EHR involves theft of data from two servers, or even theft of two physical computers, depending on deployment configuration.

**Access Control**
- Access list := the overriding principle of access control must be "relevance" both in terms of user identity (who is delivering care to the patient) and time (during the current episode of care, and for some reasonable, limited time afterward). An access control list can be defined for the EHR, indicating both identified individuals and categories, the latter of which might be role types, or particular staff groups.
- Access control of access settings := a __gate-keeper__ controls access to the EHR access control settings. The gate-keeper is established at the time of EHR creation as being one of the identities known in the EHR, usually the patient for mentally competent adults, otherwise a parent, legal guardian, advocate or other responsible person. The gate-keeper determines who can make changes to the access control list. All changes to the list are audit-trailed as for normal data (achieved due to normal versioning).
- Privacy := patients can mark Compositions in the EHR as having one of a number of levels of privacy. The definition of the privacy levels is not hard-wired in the openEHR models but rather is defined by standards or agreements within jurisdictions of use. 
- Usability := The general mentality of access control setting is one of "sensible defaults" that work for most of the information in the EHR, most of the time. The defaults for the EHR can be set by the patient, defining access control behaviour for the majority of access decisions. Exceptions to the default policy are then added. This approach minimises the need to think about the security of every item in the EHR individually. 

Other security policy principles that should be implemented in even a minimal EHR deployment but are not directly specified by openEHR include the following.

- Access logging := read accesses by application users to EHR data should be logged in the EHR system. Currently openEHR does not specify models of such logs, but might do so in the future. Studies have shown that making users aware of the fact of access logging is an effective deterrent to inappropriate access (especially where other controls are not implemented). There are some proponents of the argument that even read-access logs should be made part of the content of the EHR proper; currently openEHR does not support this approach.
- Record demerging := when data for a patient is found to be in another patient's EHR, the access logs for that EHR should be used to determine who has accessed that data, primarily to determine if subsequent clinical thinking (e.g. diagnoses, medication decisions) have been made based on wrong information.
- Record merging := when more than one EHR is discovered for the same patient, and have to be merged into a single record, the access control lists have to be re-evaluated and merged by the patient and potentially relevant carers.
- Time-limitation of access := mechanisms should be implemented that limit the time during which given health professionals can see the patient record. Usually, the outer limits are defined by the interval of the episode of care in an institution plus some further time to cover follow-up or outpatient care. Episode start and end are recorded in openEHR as instances of the ADMIN_ENTRY class, containing admission and discharge details.
- Non-repudiation := if digital signing of changes to the record is made mandatory, non-repudiation of content can be supported by an openEHR system. The digital signing of communications (EHR Extracts) is also supported in openEHR; coupled with logging of communication of Extracts, this can be used to guarantee non-repudiation of information passed between systems (cf. information passed between back-end and front-end applications of the same system).
- Certification := a mechanism should be provided to allow a level of trust to be formally associated with user signing keys.

A key feature of the policy is that it must scale to distributed environments in which health record information is maintained at multiple provider sites visited by the patient.

As Anderson points out in the BMA study, policy elements are also needed for guarding against users gaining access to massive numbers of EHRs, and inferencing attacks. Currently these are outside the scope of openEHR, and realistically, of most EHR implementations of any kind today.

The following sections describe how openEHR supports the first list of policy objectives.

h3. 7.3.3 Integrity

**Versioning**
The most basic security-related feature of openEHR is its support for data integrity. This is mainly provided by the versioning model, specified in the @change_control@ package in the Common Information Model, and in the Extract Information Model. Change-set based versioning of all information in the EHR and demographic services constitutes a basic integrity measure for information, since no content is ever physically modified, only new versions are created. All logical changes and deletions as well as additions are therefore physically implemented as new Versions rather than changes to existing information items. Clearly the integrity of the information will depend on the quality of the implementation; however, the simplest possible implementations (1 Version = 1 copy) can provide very good safety due to being write-once systems.
The use of change-sets, known as Contributions in openEHR, provides a further unit of integrity corresponding to all items modified, created or deleted in a single unit of work by a user. 
The openEHR versioning model defines audit records for all changed items, which can be basic audits and/or any number of additional digitally signed attestations (e.g. by senior staff). This means that every write access of any kind to any part of an openEHR record is logged with the user identification, time, reason, and potentially other meta-data. Versioning is described in detail in section 8 on page 42.

**Digital Signature**
The possibility exists within an openEHR EHR to digitally sign each Version in a Versioned object (i.e. for each Version of any logical item, such as medications list, encounter note etc.). The signature is created as a private-key encryption (e.g. RSA-1) of a hash (e.g. MD5) of a canonical representation (such as in schema-based XML) of the Version being committed. A likely candidate for defining the signature and digest strings in openEHR is the openPGP message format (IETF RFC2440[1]), due to being an open specification and self-describing. The use of RFC2440 for the format does not imply the use of the PGP distributed certificate infrastructure, or indeed any certification infrastructure; openEHR is agnostic on this point. If no public key or equivalent infrastructure is available, the encryption step might be omitted, resulting in a digest only of the content. The signature is stored within the Version object, allowing it to be conveniently carried within EHR Extracts. The process is shown in FIGURE 22. 
The signing of data in a versioning system acts as an integrity check (the digest performs this function), an authentication measure (the signature performs this function), and also a non-repudiation measure. To guard against hacking of the versioned persistence layer itself, signatures can be forwarded to a trusted notarisation service. A fully secure system based on digital signing also requires certified public keys, which may or may not be available in any given environment. 
One of the benefits of digitally signing relatively small pieces of the EHR (single Versions) rather than the whole EHR or large sections of it is that the integrity of items is more immune to localisedrepository corruptions.

!fig22.png(FIGURE 22)!

fn1. IETF RFC 2440 - "http://www.ietf.org/internet-drafts/draft-ietf-openpgp-rfc2440bis-18.txt":http://www.ietf.org/internet-drafts/draft-ietf-openpgp-rfc2440bis-18.txt

h3. 7.3.4 Anonymity

As described above in section 6.1, one of the features of the openEHR EHR is a separation of EHR (clinical and administrative) information and demographic information. This mainly relates to references to the patient rather than to provider entities, since the latter are usually publicly known. A special kind of object known as @PARTY_SELF@ in openEHR is used to refer to the subject in the EHR. The only information contained in a @PARTY_SELF@ instance is an optional external reference. The openEHR EHR can be configured to provide 3 levels of separation by controlling whether and where this external identifier is actually set in @PARTY_SELF@ instances, as follows:

* Nowhere in the EHR (i.e. every @PARTY_SELF@ instance is a blank placeholder). This is the most secure approach, and means that the link between the EHR and the patient has to be done outside the EHR, by associating EHR.ehr_id and the subject identifier. This approach is more likely for more open environments.
* Once only in the EHR Status object (subject attribute), and nowhere else. This is also relatively secure, if the EHR Status object is protected in some way.
* In every instance of @PARTY_SELF@; this solution is reasonable in a secure environment, and convenient for copying parts of the record around locally.

This simple mechanism provides a basic protection against certain kinds of information theft or hacking if used properly. In the most secure situation, a hacker has to steal not just EHR data but also separate demographic records and an identity cross reference database, both of which can be located on different machines (making burglary harder). The identity cross-reference database would be easy to encrypt or protect by other security mechanisms.

h2. 7.4 Access Control

**Overview**
Access control is completely specified in an openEHR EHR in the @EHR_ACCESS@ object for the EHR. This object acts as a gateway for all information access, and any access decision must be made based on the policies and rules it contains. One of the problems with defining the semantics of the EHR Access object is that there is currently no published formal, proven model of access control for shared health information. Various efforts underway include the CEN EN13606 part 4 work, the ISO PMAC (Privilege Management and Access Control) work being done in TC/215 based on the generic security standard ISO/IEC 17799. Undoubtedly experimental and even some limited production health information security implementations exist. In reality however, no large-scale shared EHR deployments exist, and so security solutions to date are still developmental.
The openEHR architecture is therefore designed to accommodate alternative models of access control, each defined by a subtype of the class @ACCESS_CONTROL_SETTING@ (Security IM). This approach means that a simplistic access control model can be defined and implemented initially, with more sophisticated models being used later. The "scheme" in use at any given time is always indicated in the EHR Access object.

