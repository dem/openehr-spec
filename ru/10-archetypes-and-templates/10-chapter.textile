h1. 10 Архетипы и Шаблоны

h2. 10.1 Обзор

В подходе двухуровневого моделирования определение информационных структур происходит на двух уровнях. Нижний уровень базовой модели представляет собой устойчивую объектную модель, на которой можно построить программное обеспечение и создать данные. Понятия базовой модели openEHR являются инвариантами и включают в себя такие объекты как Composition, Section, Observation и различные типы данных, такие как Quantity и Coded text. Верхний уровень состоит из определений предметной области в форме архетипов и шаблонов. На этом уровне определяются такие понятия как “измерение артериального давления ”, “заголовки SOAP”, “результат исследования гемоглобина”.
 
Вся информация соответствующая базовой модели openEHR, другими словами коллекция информационных моделей, является “архетипизируемой”, что означает, что создание и изменение содержимого и последующий запрос данных контролируется архетипами. Архетипы отделены от данных и хранятся в своем собственном репозитории. Каждый репозиторий в конкретном месте обычно включает в себя архетипы из широко известных доступных библиотек. Архетипы подключаются во время исполнения через шаблоны, которые определяют конкретную группу архетипов для использования в конкретной задаче, обычно относящейся к экранной форме.

Архетипы являются экземплярами модели архетипов, которая определяет язык описания архетипов; синтаксический эквивалент модели это Archetype Definition Language, ADL. Эти понятия определены в openEHR Archetype Object Model (AOM) и в документах ADL соответственно. Каждый архетип является набором ограничений на базовую модель, определяющим подмножество объектов, которые считаются соответствующими понятию, описываемому архетипом, например “результат лабораторного исследования”. Таким образом, можно рассматривать архетип как инструкцию от конструктора LEGO® (например, для трактора), которая определяет набор кубиков LEGO® для сборки трактора. Архетипы гибки; один архетип включает множество вариаций так же, как и инструкция может включать множество вариантов для одного простого объекта. С точки зрения математики, архетип является эквивалентом запросу на языке F-logic [5]. Архетипы являются универсальными, повторно используемыми и составными. Для задач получения и проверки данных они используется во время исполнения через шаблоны.

Шаблон в openEHR является описанием, которое определяет дерево из одного и более архетипов, каждый из которых ограничивает различные типы базовой модели, такие как Composition, Section, подтипы Entry и так далее. Таким образом, несмотря на то, что скорее всего будут архетипы для таких понятий как “результат биохимического анализа” и “заголовки SOAP”, шаблоны используются для объединения архетипов в документы. Шаблоны обычно соотносятся с экранными формами, напечатанными отчетами и в общем случае с блоками информации, которые могут быть получены или отправлены и могут использоваться для определения содержимого сообщений. Обычно они разрабатываются и используются локально, в то время как архетипы используются широко. 

Во время исполнения шаблоны используются для формирования структур данных, проверки вводимых данных на соответствие ограничениям, определенным в архетипах, которые данный шаблон включает. В частности они должны соответсовавать структуре __пути__ архетипа а также ограничениям терминологии. Используемые архетипы сохраняются в самих данных в форме идентификатора архетипа в соответвующих корневых узлах и идентификатора узла архетипа ([atnnnn] коды), которые являются нормативными именами и в свою очередь являются основой для путей. Для изменения этих данных идентификаторы архетипов позволяют приложению получить и использовать те же архетипы, проверяя соответсвия новых данных начальным ограничениям.

Архетипы также являются основой семантических запросов. Запросы выражаются на языке, который явялется синтезом языка SQL (SELECT/FROM/WHERE) и W3C XPaths, выделенном из архетипов.

h2. 10.2 Формализм и Модели Архетипов

h3. 10.2.1 Обзор

В openEHR архетипы формализуются Архетипной Объектной Моделью (AOM). Это объектная модель семантики архетипов. Когда архетип существует в памяти (например в "ядре" архетипизорованной ЭМК), он представляет собой эксземпляры классов этой модели. AOM, таким образом, является точным утверждением семантики архетипов. 

В сериализованном виде архетипы могут быть представлены разнообразными способами. Нормативный путь сериализцации это Язык Описания Архетипов (ADL). Это абстрактный язык, основанный на запросах Frame Logic (также известный как F-logic[5]) сдополнением терминологии. ADL архетип гарантирует 100% сохранности отображения семантики и спроектирован как синтаксический аналог (AOM). Тем не менее другие надежные и ненадежные способы сериализации возможны и некоторые уже существуют. Для практического применения в некоторых ситуациях используется XML сериализация. Сериализация чисто выражается на dADL, синтаксис сериализации объекта ADL будет доступен в будущем. Для экранного отображения или просмотра людьми используются разнообразные форматы такие как HTML, RTF и другие.

Шаблоны openEHR представляются как dADL документы, объектная модель которых соответсвует Объектной Модели Шаблонов(TOM). 

h3. 10.2.2 Взаимосвязи в архетипах на этапе проектирования.

Архетипы являются разширяемыми формальными определениями ограничений структур объектов. В общности с классами объектной модели они могут быть __специализированы__, а также __скомпанованы__. Специализированные архетипы создаются когда уже существует архетип для моделируемых понятий, но он не достаточно детализирован или слишком обобщен. Например, архетип @openEHR-EHR-OBSERVATION.labora-tory.v1@ содержит общие понятия об 'образцах', 'диагностическом сервисе', единичном результате люобого типа или двухуровневой батареи группы результатов. Этот архетип может быть (и был) использован для представления результата лабораторного анализа практически любого вида. Тем не менее существую специализации, такие как @openEHR-EHR-OBSERVATION.laboratory-glucose.v1@, которые оказываются очень полезными и могут быть легко определены основываясь на предшественнике; в этом случае узел результата может быть переопределен как 'глюкоза крови'. Формальное правило для специализации:

* специализированный архетип может только усиливать существующие ограничения родителя (но может и добавлять свои)

В результате этого, данные, созданные с  любым специализированным архетипом всегда будут соответствовать запросам основанным на родительском архетипе. Другими словами, запрос на Observation 'результат лобораторного анализа' будет кореектно отдавать данные Observation 'глюкоза крови'. Это сочетается с основным онтологическим принципом категоризации, который говорит, что экземляры класса B яляются экземплярами класса A, если класс B относится к классу A семантической связью 'есть - A'. Специализированные архетипы выделяются использованием идентификатора, наследованного от родительского с новым подэлементом семантической части, отделенного сиволом "-".

Второе возможное отношение между архетипами это композиция, позволяющая гибко ограничивать большие структуры данных через иерархическое повторное использование мелких архетипов. Композиция определяется в терминах 'слоты' внутри архетипа. Слот - это точка внутри структуры архетипа, где вместо указания конкретного типа объекта используется специальное ограничение __allow_archetype__ для указания других архетипов, которые могут использоваться в этой точке. Например, архетип @openEHR-EHR-SECTION.vital_signs.v1@ определяет заголовочную структуру для заголовков для работы с жизненными показателями. Он также определяет значение аттрибута __элементы__ как множество Observations; тем не менее вместо их указания, он определяет слот в форме ограничений на архетипы класса Observation, которые разрешены в этой точке. Простейший тип ограничений это регулярные выражения на идентификаторы архетипов. Более сложные ограничения могут быть указаны в путях других архетипов (например @exists(/some/path[at0005])@). Поэтому слот определяет 'точку соединения' __возможных__ архетипов, разрешенных или исключенных в данной точке; также возможно ограничение до одного архетипа. Шаблоны используются для выбора конкретного архетипа, разрешенного в данном слоте, который будет использоваться в конкретном случае.

h2. 10.3 Взаимосвязь архетипов и шаблонов с данными

Все узлы внутри информационных структур верхнего уровня в базовой модели openEHR являются 'архетипизируемыми', где определенные узлы внутри этих структур являются "корневыми узлами". Каждый тип верхнего уровня гарантированно является корневой точкой. Хотя теоретически возможно использование единственного архетипа для всей структуры верхнего уровня, в большинстве случаев, а в частности для @COMPOSITION@ и @PARTY@ будет использована иерархическая структура с множеством архетипов через механизм слотов, описанный выше. Это позволяет делать группировку или повторно использовать архетипы. Когда иерархии архетипов используются для структур верхнего уровня, также будут существовать корневые точки внутри структуры. Например, внутри @COMPOSITION@ экземпляры @ENTRY@ (например @OBSERVATIONs@, @EVALUATIONSs@ и т.д.) почти всегда являются корневыми точками. Экземпляры @SECTION@ являются корневыми точками если они находятся на вершине структуры Section; аналогично для экземпляров @FOLDER@ внутри структуры директорий. Другие узлы (например экземпляры @SECTIONs@, @ITEM_STRUCTURE@) могут также быть корневыми точками в зависимости от кого как архетипы относятся к данным во время исполнения. Рисунок 30 показывает применение архетипов и шаблонов к данным.

h2. 10.4 Архетипизирование данных базовой модели

Архетипизирование классов базовой модели достигается через наследование класса @LOCATABLE@ из пакета @common.archetyped@ (смотри Common IM). Класс @LOCATABLE@ включает аттрибуты @archetype_node_id@ и @archetype_details@. В данных он хранит идентификатор архетипа. Если узел в данных является корневой точкой, он хранит составной идентификатор образовавшего архетипа и @archetype_details@, хранящие объект @ARCHETYPED@, содержащий информацию относящуюся к корневой точке. Если это не корневая точка, аттрибут @archetype_node_id@ хранит идентификатор (известный как "at" или "archetype term" код) внутреннего узла архетипа, образовавшего эти данные, а аттрибут @archetype_details@ будет пустым.

Соседние узлы в данных могут хранить одинаковый @archetype_node_id@ в некоторых случаях, т.к архетипы предоставляют образец для данных а не точный шаблон. Другими словами, в зависимости от дизайна архетипа, единичный узел может быть размножен в данных.

В этом случае каждая композиция[1] архетипизированных данных в openEHR имеет образующий архетип который определяет конкретную конфигурацию экземпляров длясоздания ожидаемой композиции. Арехип для "биохимического нанализа крови" является архетипом класса @OBSERVATION@ и ограничивает конкретное расположение экземпляров под объектом @OBSERVATION@; архетип "жалобы/SOAP заголовки" ограничивает объекты класса @SECTION@, формирующие структуру заголовков SOAP. В общем случае, архетипизированная  композиция данных это любая композиция данных, начинающаяся в корневом узле и продолжающаяся к ее ветвям, на которых начинаются композиции нижнего уровня, если они существуют. Каждая архетипизированная область и ее подчиненные архетипизированные области на рисунке 30 является архетипизированной композицией данных.

В результате использования архетипов для создания данных в ЭМК (и в других системах) структура данных в любом объекте верхнего уровня соответсвует ограничениям определенным в композиции архетипов, выбранных шаблоном включая все ограничения обязательности, значений и терминологии.


