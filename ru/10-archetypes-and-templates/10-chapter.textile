h1. 10 Архетипы и Шаблоны

h2. 10.1 Обзор

В подходе двухуровневого моделирования определение информационных структур происходит на двух уровнях. Нижний уровень базовой модели представляет собой устойчивую объектную модель, на которой можно построить программное обеспечение и создать данные. Понятия базовой модели openEHR являются инвариантами и включают в себя такие объекты как Composition, Section, Observation и различные типы данных, такие как Quantity и Coded text. Верхний уровень состоит из определений предметной области в форме __архетипов__ и __шаблонов__. На этом уровне определяются такие понятия как “измерение артериального давления ”, “заголовки SOAP”, “результат исследования гемоглобина”.
 
Вся информация соответствующая базовой модели openEHR, другими словами коллекция информационных моделей, является “архетипизируемой”, что означает, что создание и изменение содержимого и последующий запрос данных контролируется архетипами. Архетипы отделены от данных и хранятся в своем собственном репозитории. Каждый репозиторий в конкретном месте обычно включает в себя архетипы из широко известных доступных библиотек. Архетипы подключаются во время исполнения через шаблоны, которые определяют конкретную группу архетипов для использования в конкретной задаче, обычно относящейся к экранной форме.

Архетипы являются экземплярами модели архетипов, которая определяет язык описания архетипов; синтаксический эквивалент модели это Archetype Definition Language, ADL. Эти понятия определены в openEHR Archetype Object Model (AOM) и в документах ADL соответственно. Каждый архетип является набором ограничений на базовую модель, определяющим подмножество объектов, которые считаются соответствующими понятию, описываемому архетипом, например “результат лабораторного исследования”. Таким образом, можно рассматривать архетип как инструкцию от конструктора LEGO® (например, для трактора), которая определяет набор кубиков LEGO® для сборки трактора. Архетипы гибки; один архетип включает множество вариаций так же, как и инструкция может включать множество вариантов для одного простого объекта. С точки зрения математики, архетип является эквивалентом запросу на языке F-logic [5]. Архетипы являются универсальными, повторно используемыми и составными. Для задач получения и проверки данных они используется во время исполнения через шаблоны.

Шаблон в openEHR является описанием, которое определяет дерево из одного и более архетипов, каждый из которых ограничивает различные типы базовой модели, такие как Composition, Section, подтипы Entry и так далее. Таким образом, несмотря на то, что скорее всего будут архетипы для таких понятий как “результат биохимического анализа” и “заголовки SOAP”, шаблоны используются для объединения архетипов в документы. Шаблоны обычно соотносятся с экранными формами, напечатанными отчетами и в общем случае с блоками информации, которые могут быть получены или отправлены и могут использоваться для определения содержимого сообщений. Обычно они разрабатываются и используются локально, в то время как архетипы используются широко. 

Во время исполнения шаблоны используются для формирования структур данных, проверки вводимых данных на соответствие ограничениям, определенным в архетипах, которые данный шаблон включает. В частности они должны соответствовать структуре __пути__ архетипа а также ограничениям терминологии. Используемые архетипы сохраняются в самих данных в форме идентификатора архетипа в соответствующих корневых узлах и идентификатора узла архетипа ([atnnnn] коды), которые являются нормативными именами и в свою очередь являются основой для путей. Для изменения этих данных идентификаторы архетипов позволяют приложению получить и использовать те же архетипы, проверяя соответствия новых данных начальным ограничениям.

Архетипы также являются основой семантических запросов. Запросы выражаются на языке, который является синтезом языка SQL (SELECT/FROM/WHERE) и W3C XPaths, выделенном из архетипов.

h2. 10.2 Формализм и Модели Архетипов

h3. 10.2.1 Обзор

В openEHR архетипы формализуются Объектной Моделью Архетипов (AOM). Это объектная модель семантики архетипов. Когда архетип существует в памяти (например в "ядре" архетипизированной ЭМК), он представляет собой экземпляры классов этой модели. AOM, таким образом, является точным утверждением семантики архетипов. 

В сериализованном виде архетипы могут быть представлены разнообразными способами. Нормативный путь сериализации это Язык Описания Архетипов (ADL). Это абстрактный язык, основанный на запросах Frame Logic (также известный как F-logic[5]) с дополнением терминологии. ADL архетип гарантирует 100% сохранности отображения семантики и спроектирован как синтаксический аналог (AOM). Тем не менее другие надежные и ненадежные способы сериализации возможны и некоторые уже существуют. Для практического применения в некоторых ситуациях используется XML сериализация. Сериализация чисто выражается на dADL, синтаксис сериализации объекта ADL будет доступен в будущем. Для экранного отображения или просмотра людьми используются разнообразные форматы такие как HTML, RTF и другие.

Шаблоны openEHR представляются как dADL документы, объектная модель которых соответствует Объектной Модели Шаблонов(TOM). 

h3. 10.2.2 Взаимосвязи в архетипах на этапе проектирования.

Архетипы являются расширяемыми формальными определениями ограничений структур объектов. В общности с классами объектной модели они могут быть __специализированы__, а также __скомпонованы__. Специализированные архетипы создаются когда уже существует архетип для моделируемых понятий, но он не достаточно детализирован или слишком обобщен. Например, архетип @openEHR-EHR-OBSERVATION.labora-tory.v1@ содержит общие понятия об 'образцах', 'диагностическом сервисе', единичном результате любого типа или двухуровневой батареи группы результатов. Этот архетип может быть (и был) использован для представления результата лабораторного анализа практически любого вида. Тем не менее существую специализации, такие как @openEHR-EHR-OBSERVATION.laboratory-glucose.v1@, которые оказываются очень полезными и могут быть легко определены основываясь на предшественнике; в этом случае узел результата может быть переопределен как 'глюкоза крови'. Формальное правило для специализации:

* специализированный архетип может только усиливать существующие ограничения родителя (но может и добавлять свои)

В результате этого, данные, созданные с  любым специализированным архетипом всегда будут соответствовать запросам основанным на родительском архетипе. Другими словами, запрос на Observation 'результат лабораторного анализа' будет корректно отдавать данные Observation 'глюкоза крови'. Это сочетается с основным онтологическим принципом категоризации, который говорит, что экземпляры класса B являются экземплярами класса A, если класс B относится к классу A семантической связью 'есть - A'. Специализированные архетипы выделяются использованием идентификатора, наследованного от родительского с новым подэлементом семантической части, отделенного символом "-".

Второе возможное отношение между архетипами это композиция, позволяющая гибко ограничивать большие структуры данных через иерархическое повторное использование мелких архетипов. Композиция определяется в терминах 'слоты' внутри архетипа. Слот - это точка внутри структуры архетипа, где вместо указания конкретного типа объекта используется специальное ограничение __allow_archetype__ для указания других архетипов, которые могут использоваться в этой точке. Например, архетип @openEHR-EHR-SECTION.vital_signs.v1@ определяет заголовочную структуру для заголовков для работы с жизненными показателями. Он также определяет значение атрибута __элементы__ как множество Observations; тем не менее вместо их указания, он определяет слот в форме ограничений на архетипы класса Observation, которые разрешены в этой точке. Простейший тип ограничений это регулярные выражения на идентификаторы архетипов. Более сложные ограничения могут быть указаны в путях других архетипов (например @exists(/some/path[at0005])@). Поэтому слот определяет 'точку соединения' __возможных__ архетипов, разрешенных или исключенных в данной точке; также возможно ограничение до одного архетипа. Шаблоны используются для выбора конкретного архетипа, разрешенного в данном слоте, который будет использоваться в конкретном случае.

h2. 10.3 Взаимосвязь архетипов и шаблонов с данными

Все узлы внутри информационных структур верхнего уровня в базовой модели openEHR являются 'архетипизируемыми', где определенные узлы внутри этих структур являются "корневыми узлами". Каждый тип верхнего уровня гарантированно является корневой точкой. Хотя теоретически возможно использование единственного архетипа для всей структуры верхнего уровня, в большинстве случаев, а в частности для @COMPOSITION@ и @PARTY@ будет использована иерархическая структура с множеством архетипов через механизм слотов, описанный выше. Это позволяет делать группировку или повторно использовать архетипы. Когда иерархии архетипов используются для структур верхнего уровня, также будут существовать корневые точки внутри структуры. Например, внутри @COMPOSITION@ экземпляры @ENTRY@ (например @OBSERVATIONs@, @EVALUATIONSs@ и т.д.) почти всегда являются корневыми точками. Экземпляры @SECTION@ являются корневыми точками если они находятся на вершине структуры Section; аналогично для экземпляров @FOLDER@ внутри структуры директорий. Другие узлы (например экземпляры @SECTIONs@, @ITEM_STRUCTURE@) могут также быть корневыми точками в зависимости от кого как архетипы относятся к данным во время исполнения. Рисунок 30 показывает применение архетипов и шаблонов к данным.

!30.png!

h2. 10.4 Архетипизирование данных базовой модели

Архетипизирование классов базовой модели достигается через наследование класса @LOCATABLE@ из пакета @common.archetyped@ (смотри Common IM). Класс @LOCATABLE@ включает атрибуты @archetype_node_id@ и @archetype_details@. В данных он хранит идентификатор архетипа. Если узел в данных является корневой точкой, он хранит составной идентификатор образовавшего архетипа и @archetype_details@, хранящие объект @ARCHETYPED@, содержащий информацию относящуюся к корневой точке. Если это не корневая точка, атрибут @archetype_node_id@ хранит идентификатор (известный как "at" или "archetype term" код) внутреннего узла архетипа, образовавшего эти данные, а атрибут @archetype_details@ будет пустым.

Соседние узлы в данных могут хранить одинаковый @archetype_node_id@ в некоторых случаях, т.к архетипы предоставляют образец для данных а не точный шаблон. Другими словами, в зависимости от дизайна архетипа, единичный узел может быть размножен в данных.

В этом случае каждая композиция[1] архетипизированных данных в openEHR имеет образующий архетип который определяет конкретную конфигурацию экземпляров для создания ожидаемой композиции. Архетип для "биохимического анализа крови" является архетипом класса @OBSERVATION@ и ограничивает конкретное расположение экземпляров под объектом @OBSERVATION@; архетип "жалобы/SOAP заголовки" ограничивает объекты класса @SECTION@, формирующие структуру заголовков SOAP. В общем случае, архетипизированная  композиция данных это любая композиция данных, начинающаяся в корневом узле и продолжающаяся к ее ветвям, на которых начинаются композиции нижнего уровня, если они существуют. Каждая архетипизированная область и ее подчиненные архетипизированные области на рисунке 30 является архетипизированной композицией данных.

В результате использования архетипов для создания данных в ЭМК (и в других системах) структура данных в любом объекте верхнего уровня соответствует ограничениям определенным в композиции архетипов, выбранных шаблоном включая все ограничения обязательности, значений и терминологии.

h2. 10.5 Архетипы, Шаблоны и Пути

Использование архетипов и шаблонов в openEHR позволяет повсеместно использовать пути. Пути выделяются из архетипов и шаблонов и составляются из имен атрибутов и идентификаторов узлов в синтаксисе в стиле Xpath, как показано на рисунке 31.

Эти пути служат для идентификации любого узла в шаблоне или в архетипе, такой как узел "диастолическое кровяное давление" класса @ELEMENT@ глубоко внутри архетипа "измерение кровяного давления". Так как идентификаторы узлов архетипа встроены в данные во время исполнения, пути в архетипах могут быть использованы для получения данных, соответствующих конкретным частям архетипа, предоставляю хорошую основу для запросов. Пути могут быть также встроены в данные используя более сложные предикаты (но в стиле Xpath). Пути в openEHR описаны детально в раздели Пути и Локаторы на странице 58.

h2. 10.6 Архетипы и Шаблоны во время исполнения

h3. 10.6.1 Обзор

Архетипы и шаблоны в openEHR были разработаны как формальные артефакты, для компьютерной обработки во время исполнения. Они выполняют две ключевые функции. Первая - участвовать в валидации данных во время получения или импорта для гарантирования соответствия данных не только базовой модели но и самим архетипам. Валидация данных в архетипах управляется шаблонами. Вторая функция - основа проектирования запросов. Так как сбор данных основан на архетипах, они гарантированно соответствуют "семантическим путям", которые создаются композициями архетипов внутри шаблонов. Пути (показаны на рисунке 31 выше) включены в синтаксис наподобие SQL, для формирования запросов, которые могут быть выполнены для получения элементов на семантической основе.

!31.png! 

h3. 10.6.2 Развертывание Архетипов и Шаблонов

Архетипы в большинстве случаев разработаны медицинскими или экспертами в другой области знаний и часто требуют значительного изучения предметной области, например акушерство. Процесс развертывания может происходить на национальном или международном уровне и требует равного рецензирования и тестирования в реальных системах. Это сочетается с семантическим значением архетипов, которое называется __повторное использование__ моделей содержимого. Следовательно, с точки зрения любой системы развертывания, архетипы должны скорее всего быть разработаны в другом месте и должны располагаться в распознаваемом, хорошо гарантированном репозитории. 

Такие репозитории могут содержать сотни или даже тысячи архетипов. Тем не менее, для большинства ЭМК систем потребуется относительно малая часть. Медицинские эксперты ожидают, что 100 архетипов смогут охватить около 80% информации общей практики и скорой помощи включая лабораторные исследования, причем большая часть которых будет специализациями меньшей части ключевых архетипов. Тем не менее, 100 подходящих архетипов для конкретной системы могут отличаться в зависимости от типа предоставляемых медицинских услуг, например диабетическая клиника, раковое отделение, ортопедическая больничная палата, уход за пожилыми. В общем случае ожидается, что все системы с архетипами будут использовать только малый процент опубликованных архетипов. Для некоторых систем может разрабатываться небольшое число собственных архетипов, которые несомненно будут специализациями существующих архетипов.

В то время как архетипы составляют главную разделяемую и тщательно выверенную деятельность по разработке во стором слое двухуровневой модели openEHR, шаблоны являются более локальными занятием и скорее всего будут точкой соприкосновения большинства разработчиков системы с архетипами. Шаблоны обычно разрабатывают на основе трех принципов:

* что предполагается на экранной форме или в отчете
* какие архетипы уже доступны
* локальное использование терминологии

Шаблоны будут создаваться локально с помощью инструментов, соответствующих объектной модели шаблонов.

В случае приложений с графическим интерфейсом, конечный этап в цепочке - экранные формы. Они создаются множеством способов и технологий. В некоторых случаях они будут частично или полностью сгенерированы по шаблонам. Независимо от деталей, связь между экранной формой и шаблоном будет устанавливаться  в инструментальной среде, так, что когда форма будет запрошена пользователем, будет активирован соответствующий шаблон, который в свою очередь будет активировать подходящие архетипы.

Дальнейшие технические детали могут быть важны во многих ситуациях: так как архетипы и шаблоны, требуемые окружением известны заранее, они могут быть скомпилированы из разделяемой формы (т.е ADL, файлы TOM) в которой они получаются из репозитория или локального источника. Эта форма будет различаться от системы к системе, она улучшает производительность и удостоверяет, что только проверенные данные архетипы и шаблоны будут доступны приложениям. В таких системах, исполняемая форма шаблонов скорее всего будут включать копии подходящих архетипов.

Процесс развертывания архетипов, шаблонов и экранных форм показан на рисунке 32.

!32.png!

h3 10.6.3 Проверка во время получения данных

Проверка - это главная функция работы архетипов, это в первую очередь то, как создаются "архетипизированные" данные, а потом изменяются. Валидация в архетипах может быть использована в приложениях с графическим интерфейсом или в сервисе импорта данных. Хотя источник данных (клавиатура, полученный XML или другие сообщения) может быть различным, логический процесс одинаковый: создание архетипизированных данных openEHR в соответствии со входным потоком.

Процесс во время исполнения может отличаться в некоторых деталях в зависимости от реализации и других аспектов медицинского учереждения, но главное направление будет одинаковым. Архетипы, используемые в конкретной системе всегда будут управляться во время исполнения шаблонами openEHR, разработанных для данной системы; они будут привязаны к экранным формам или другим формальным артефактам, которые устанавливают связь между архетипами и пользователем или приложением. Не будет необычным, что шаблон может быть частично построен во время исполнения из-за выбора пользователем архетипов на экране, хотя конечно он не будет напрямую осведомлен об этом факте. Несмотря на это, ко времени создания и проверки данных на основе соответствующих архетипов, шаблоны, которые выполняют работы будут указаны полностью. 

Процесс создания создания и сохранения данных изображен на рисунке 33. Сущность процесса заключается в том, что "ядро" системы выполняет задачу создания и проверки данных управляя "областью шаблонов" и "областью данных". Он содержит шаблоны и архетипы полученные для отображения экранной формы; последняя содержит структуры данных (экземпляры базовой модели openEHR), которые созданы в результате активности пользователя на экране. Когда данные окончательно сохранены, они гарантированно соответствуют определениям в архетипах и шаблонах, в результате проверок, которые происходят каждый раз при попытке пользователя изменить данные. Сохраненные данные содержат "семантический отпечаток" образующих архетипов в форме идентификаторов узлов архетипа на каждом узле данных. Это простое включение в модель данных позволяет делать запросы к архетипизированным данным с использованием путей. В XML представлении идентификаторы узлов архетипов представлены как XML атрибуты (то есть внутри тегов), тем самым позволяя Xpath удобно проходить по данным, основанным на этих идентификаторах (более подробнее описано в следующей секции).

!33.png!

Если данные позже меняются, они переносятся в ядро вместе с соответствующими архетипами и шаблонами, и встроенные идентификаторы позволяют ядру продолжать подходящие проверки изменений этих данных.

h3 10.6.4 Запросы

Вторая главная информационная функция архетипов - поддержка запросов. Как описано выше и в следующей секции, пути извлеченные из архетипов являются основой для запроса к этим данным. Запросы определяются на AQL (Archetype Query Language),  который является синтезом языка SQL и XPath, выделенном из архетипов. Следующий пример запроса AQL означает "Получить значения индекса массы тела которые превышают значения 30кг/м2 для конкретного пациента":

@SELECT o/[at0000]/data[at0001]/events[at0002]/data[at0003]/item[0004]/value@
@FROM EHR [uid=@ehrUid]@
@CONTAINS COMPOSITION c [openEHR-EHR-COMPOSITION.report.v1]@
@CONTAINS OBSERVATION o[openEHR-EHR-OBSERVATION.body_mass_index.v1]@
@WHERE o/[at0000]/data[at0001]/events[at0002]/data[at0003]/item[0004]/value > 30@

h2. 10.7 Архетипы в openEHR

Множество тщательно проверенных архетипов доступен на сайте openEHR http://svn.openehr.org/knowledge/archetypes/dev/index.html. Эта коллекция пополняется все время и включает архетипы разработанные для конкретных стран или других "сущностей", а также повсеместно применимые.

























   









