h1. 9 Идентификация

h2. 9.1 Идентификация EHR

В системе openEHR, каждый EHR имеет уникальный идентификатор, известный как EHR id, он находится в корневом  EHR объекте, каждого EHR. EHR id должны быть "строго" глобально уникальными, такими как надежно созданные Oids или Guids. Ни одна система не должна содержать два EHR для одного субъекта. Если это не так, то это означает, что системе EHR не удалось обнаружить существование EHR для субъекта, или не соответствуют предоставленные ​​демографические атрибуты субъекту.

В распределенной среде, соответствие идентификаторов EHR субъектам (т.е. пациентам) является переменной величиной, а зависит от уровня интеграции с окружающей средой. В не интегрированных или непостоянно связанных средах, тот же пациент может иметь отдельную EHR в каждом учреждении, каждый со своим собственным уникальным идентификатором EHR, но тот же идентификатор пациента. Если копии частей EHR пациентов в одном месте предлагается другим поставщиком, полученные элементы будут объединены в локальные EHR для этого пациента. Слияния стойких композиции в таких условиях, вероятно, потребует вмешательства человека. Несколько EHR id на одного пациента в распределенном контексте является свидетельством отсутствия систематического подключения или сервиса  идентификации. 

В полностью интегрированной распределенной среде, типичный пациент все равно будет иметь локальные EHR в нескольких местах, но каждый имеет тот же EHR id. Когда пациент представляется ​​в новом месте, отправляется запрос к служба идентификации среды что бы определить, есть ли уже EHR для этого пациента. Если есть, то создается копия всего или части существующего EHR, иначе создается новый пустой EHR, но во всех случаях EHR id будет таким же, что и в других местах для того же пациента.

Обратите внимание, что логика описанная выше имеет место только где EHR в каждом месте является EHR openEHR.

h2. 9.2 Идентификация элементов внутри EHR

h3. 9.2.1 Общая схема

В то время как идентификация EHR не полностью определена в openEHR, идентификация элементов внутри EHR полностью определено. Описанная здесь схема требует два вида "идентификатор": идентификаторы свойств и ссылок, или локаторов. Идентификатор является уникальным (в пределах некоторого контекста) символ или номер, присвоенный объекту, и обычно записанный в объект, в то время как ссылка является идентификатором внешнего объекта, и ссылается на объект содержащий идентификатор. Это различие такое же, как между первичным и внешним ключи в реляционной базе данных.

В openEHR RM, идентификаторы и ссылки реализуются с помощью двух групп классов, определенных в пакете support.identification. Идентификаторы различных видов определяются потомками класса OBJECT_ID, ссылки определяются в классах наследуемых от OBJECT_REF. Различие иллюстрируется на ИЗОБРАЖЕНИИ 28. Здесь мы видим два объекта контейнера с OBJECT_ID (OBJECT_ID это абстрактный тип, фактический тип будет другой XXX_ID класса), а также различные OBJECT_REF как ссылки.

p=. !ch9i28.png!

p=. *ИЗОБРАЖЕНИЕ 28* XXX_ID и XXX_REF

h3. 9.2.2 Уровни идентификации

Для того, чтобы элементы данных располагались снаружи, идентификация поддерживается на 3-х уровнях openEHR, а именно: 

* контейнеры версий: VERSIONED_OBJECT (Common IM) идентифицируются уникально;
* структуры содержимого верхнего уровня: структуры такие как COMPOSITION, EHR_STATUS, EHR_ACCESS, PARTY и т.д. идентифицируются по связи идентификатора в VERSIONED_OBJECT и идентификатора в VERSION в контейнере;
* внутренние узлы: узлы в пределах структур верхнего уровня идентифицируются с помощью путей.

Три вида идентификации используются соответственно. Для контейнеров версий, используются бессмысленные уникальные идентификаторы ("uids"). В большинстве случаев, будет использован тип                                                                          HIER_OBJECT_ID, который содержит экземпляр подтипа класса UID, то есть либо ISO OID или IETF UUID (см. http://www.ietf.org/rfc/rfc4122.txt; также известный как GUID). В общем случае  отдают предпочтение UUID, так как они не требуют центрального назначение и может быть получены на месте. Контейнер версий может связан с OBJECT_REF, который содержит его идентификатор.

Версии структур верхнего уровня идентифицируются таким образом, чтобы гарантированно работать даже в распределенных средах, где происходит копирование, слияние и последующее изменение. Полная идентификатор версии структуры верхнего уровня представляет собой глобальный уникальный кортеж, состоящий из UID-владельца VERSIONED_OBJECT, и два VERSION атрибута creating_system_id и version_tree_id. Creating_system_id атрибут содержит уникальный идентификатор системы, в которой впервые был создан контент, это может быть GUID, Oid или reverse internet идентификатор. Version_tree_id состоит из одного или трех чисел, например, "1" или для ветки , "1.2.1".  Типичный кортеж идентификации версии показан ниже:

pre. F7C5C7B7-75DB-4b39-9A1E-C0BA9BFDBDEC 	-- id of VERSIONED_COMPOSITION
au.gov.health.rdh.ehr1 			-- id of creating system
2					-- current version

Этот 3-часть кортежа известная как "Version locator" и определяется классом OBJECT_VERSION_ID в пакете support.identification. VERSION можетиспользовать нормальный OBJECT_REF, который содержит копию OBJECT_VERSION_ID данной версии. Схема идентификации версий в openEHR подробно описана в разделе change_control пакета Common IM.

Последним компонентом идентификации является путь, он используется для связи внутреннего узла структуры верхнего уровня, идентифицируется по его Version locator. Путь в openEHR следуют синтаксису Xpath, с небольшими сокращениями, чтобы сократить путь в наиболее распространенных случаях. Пути подробно описаны ниже.

Для ссылки на внутренний узел данных из структуры верхнего уровня, требуется сочетание Version locator и пути. Это закреплено в классе LOCATABLE_REF в разделе change_control пакета Common IM. Форма Universal Resource Identifier (URI) также может быть использована, определяется типом данных DV_EHR_URI (Data types IM). Этот тип представляет собой выражения из одной строки в схеме-пространства "ehr:", который может быть использован для обозначения внутреннего узла даннх из любой точки (она также может быть использована для представления запросов, см. ниже). Любой LOCATABLE_REF может быть преобразован в DV_EHR_URI, хотя не все DV_EHR_URI являются LOCATABLE_REF.

ИЗОБРАЖЕНИЕ 29 показывает, как различные типы BJECT_ID и OBJECT_REF используются для идентификации объектов, и для ссылок на них со стороны, соответственно.

p=. !ch9i29.png!

p=. *ИЗОБРАЖЕНИЕ 29* Как связаны различные уровни объекта


