h1. 6 Модель ЭМК openEHR

h2. 6.1 Система ЭМК

С точки зрения информации, минимальная система ЭМК, изображенная на рис. 13 основанная на openEHR состоит из хранилища ЭМК, хранилища архитипов, терминологии(при наличии) и демографической (персональной) информации.

p=. !../../en/06-design-of-the-openEHR-EHR/fig13.png!

p=. Рисунок 13. Минимальная система ЭМК.

Последний может быть реализована как в форме существующего PMI(patient master index) или другого справочников, так и в форме хранилища демографической информации openEHR. Репозиторий демографической инф-ии openEHR может выступать как в качестве front-end действующей PMI системы, так и действовать сам по себе. В любом случае он выполняет две функции: стандартизацию и версионирование структур демографической информации.
Электронная медицинская карта openEhr cодержит ссылки на сущности в том репозитарии, который был настроен для использования в системе; электронная медицинская карта может быть настроена таким образом, чтобы либо не включать никаких демографических данных, либо содержать небольшое число идентифицирующих пациента данных. 
Принцип полного разделения данных медицинской карты и демографической информации в системе openEHR является одним из основополагающих, таким образом, ЭМК, взятая в отдельности содержит ничтожно мало или вообще не содержит информации, необходимой для однозначной идентификации пациента. Получаемые выгоды в системе  безопасности будут описаны ниже. В большинстве полноценных ЭМК систем большинство других служб(в частности, относящихся к сфере безопасности) могут быть развернуты, как показано на рис. 7.

h2. 6.2 Информационные структуры верхнего уровня

Как было показано, информационные модели openEhr, определяют информацию на различных уровнях детализации системы. Высокодетализированные структуры, описанные в типах Support и Data, используются в моделях Data Structures и Common, которые в свою очередь используются в ЭМК, EHR Extract, Demographic и других высокоуровневых моделях. Эти последние модели определяют высокоуровневые структуры openEHR, то есть содержат структуры, которые могут использоваться по отдельности и быть рассмотрены как эквивалент отдельных документов в документоориентированной системе. В информационных системах openEHR они представляют собой, преимущественно, высокоуровневые структуры, которые напрямую используются пользователем. Следующие высокоуровневые структуры можно рассматривать как наиболее важные:

* +Composition+ - фиксирующий блок ЭМК (см. тип @COMPOSITION@ в информационной модели EHR);
* +EHR Acces+ - the EHR-wide access control object (см. тип @EHR_ACCESS@ в информационной модели EHR);
* +EHR Status+ - суммарный статус ЭМК (см. тип @EHR_STATUS@ в информационной модели EHR);
* +Folder hierarchy+ - действует в качестве каталогизирующей структуры  in EHR, Demographic services (см. тип @FOLDER@ в информационной модели Common);
* +Party+ - различные подтипы, включая Actor, Role, и т.д., представляющие демографическую сущность с персональными и контактными данными (см. тип @PARTY@ и его подтипы в информационной модели Demographic);
* +EHR Extract+ - промежуточный модуль между системами ЭМК, содержащими упорядоченный набор ЭМК, демографическим модулем и другими данными (см. тип @EHR_EXTRACT@ в информационной модели EHR Extract).

h2. 6.3 Электронная медицинская карта

Структура ЭМК openEHR соответствует относительно простой модели. Центральный объект ЭМК определяется по идентификатору ЭМК, определяющему связи со множеством типов структурированной и версионрованной информации, а также списком Contribution обектов, действующих в качестве аудиторов изменений, производимых в ЭМК. Высокоуровневая структура ЭМК openEHR показана на рис. 14.

p=. !../../en/06-design-of-the-openEHR-EHR/fig14.png!

p=. Рисунок 14. Высокоуровневая структура ЭМК openEHR.

На этом рисунке изображены следующие части ЭМК:
* __EHR__: - корневой объект, идентифицируемый по глобальному уникальному идентификатору ЭМК;
* __EHR Access(версионируемый)__: - объект, содержащий настройки контроля доступа к картам;
* __EHR Status(версионируемый)__: - объект, содержащий различные статусы и управляющую информацию, а также опционально включающий идентификатор субъекта(т.е. пациента), в текущий момент связанного с данной картой;
* __Directory(версионируемый)__: - опциональная иерархическая структура Folders, которая может быть использована для логической организации Compositions;
* __Compositions(версионируемый)__: - контейнер всего клинического и административного содержимого карты;
* __Contributions__: - учет набора изменений, производимый для каждого изменения, сделанного в ЭМК. Каждый Contribution ссылается на одну или более Versions любого версионируемого элемента в ЭМК, которые были зафиксированны или заверены.

Внутрення структура объектов Composition и Directory близка по соответствию уровням, описанным в таких международно-признанных моделях медицинской информации, как CEN EN13606 and HL7 CDA стандарты.

Логическая структура типичного Composition детально изображена на рис. 15. На этом рисунке иерархические уровни объекта Composition представлены как группировка типов данных. 21 тип данных представляют собой основу для всех типов данных необходимых для записи клинической и административной информации.

p=. !../../en/06-design-of-the-openEHR-EHR/fig15.png!

p=. Рисунок 15. Элементы объекта Composition системы openEHR.

h2. 6.4 Записи и "клинические формулировки"

*Подтип Entry*
Вся клиническая информация, создаваемыя в ЭМК openEHR полностью выражается в "Entry". Entry - это логически единая "формулировка клинической информации"; она может быть записана как короткой описывающей фразой, так и содержать значительное множество данных(например целый результат микробиологического теста, заключение о психиатрическом исследовании, сложный рецепт приема лекарств).Классы Entry являются наиболее важными в информационной моделе ЭМК openEHR с точки зрения фактического содержимого, так как они определяют семантику всего ядра информации, заносимого в записи. Подразумевается, что классы Entry архетипизированны и фактически, архетипы использованные для создания этих записей и их элементов составляют большинство архетипов определенных для ЭМК. 

класс Entry openEHR показан на рис 16. На нем изображены 5 конкретных подтипов Entry:
@ADMIN_ENTRY@, @OBSERVATION@, @EVALUATION@, @INSTRUCTION@ и @ACTION@, четыре из которых являются подтипами @CARE_ENTRY@.

p=. !../../en/06-design-of-the-openEHR-EHR/fig16.png!

p=. Рисунок 16. Модель класса Entry системы openEHR(в EHR информационной модели).

Выбор этих типов основывается на процессе поиска решения клинической проблемы, показанного на рис. 17.

p=. !../../en/06-design-of-the-openEHR-EHR/fig17.png!

p=. Рисунок 17. Взаимоотношения типов исследовательского процесса.

Этот рисунок изображает цикл создания информации как итеративный процесс поиска решения проблемы, применимый не только к клинической медицине, но и науке в целом."Система", как целое, состоит из двух частей: "система-пациент" и "система-клинический исследователь". Последняя состоит из оказавыющего медицинский уход персонала и может включать пациента(в момент времени, когда пациент проходит осмотр или терапевтические мероприятия). Эта система несет ответственность за понимание состояния системы "пациент" и оказания медицинского ухода. Проблема решается путем проведения наблюдений, формирования мнения(гипотез) и предписывания определенных действий(инструкций), которые будут выполнены на следующем шаге. Следующий шаг, в свою очередь, может быть дальнейшим исследованием, вмешательством(направленным на решение проблемы), либо, в конечном счете, исполнением предписанных инструкций.

Эта процессная модель является синтезом проблемно-ориентирванного метода записи ЭМК Lawrence Weed, в т.ч. последующих исследований этойй области, включая модель Rector, Nowlan и Kay [ 7 ] и "гипотетико-дедуктивной" модели умозаключений(см [ 3 ]). Однако предположение гипотезы и её проверка не единственный успешный подход, используемый профессиональными клиницистами. Практика показывает, что большинство(в частности более старшие и опытные клиницисты) основываются на распознавании общих признаков и получении схем мероприятий, использованных до этого с подобными пациентами, либо прототипными моделями. Процессная модель исследователя, использованная в openEHr совместима с обоими когнитивными подходами, так как она не описывает как формируется предположение, не подразумевает определенное число итераций, которые приведут процесс к заключению, и даже не требует выполнения всех шагов, представленных в цикле(например, врачи общей практики часто предписывают что-либо без постановки точного диагноза). Следовательно модель Entry системы openEHR не навязывает процессную модель, а всего лишь предоставляет возможные типы информации, которые могут возникнуть.

*Онтология типов Entry*
В клиническом мире практикующие врачи не думают в терминах только пяти типов данных, соответствующих подтипам Entry, описанным выше. Существует много подтипов каждого из этих типов, некоторые из которых онтологически изображены на рис 18.

p=. !../../en/06-design-of-the-openEHR-EHR/fig18.png! 

p=. Рисунок 18. Онтология записываемой информации.

Здесь ключевыми высокоуровнемыми категориями являются "care information" и "administrative information". Последняя включает в себя все формулировки, которые могут быть записаны во время процесса медицинского ухода, и состоит из важных подкатегорий, являющихся основой модели Entry, а именно: наблюдение, мнение, инструкция, действие(резновидность наблюдения), которые сами по себе соответсвуют прошлому настоящему и будущему. Категория административной информации включает в себя информацию, которая вырабатываются не в процессе надлежащего медицинского ухода, а относится к такой его организации, как составление расписания приема. Это информация не об уходе, а о материально-техническом обеспечении оказания медицинских услуг.

Несмотря на разнообразие, каждая из категорий, представленная в виде листа дерева, показанного на этом рисунке, в конечном счете является подкатегорией одного из типов процессной модели, а следовательно, и одного из подтипов модели Entry системы openEHR.

Правильное представление категорий из онтологии достигается с помощью архетипов, предназначенных выражать информацию, представляющую интерес (например, оценка риска) в отношении конкретного подтипа Entry (в данном случае, Evaluation). В системе, где Entry смоделированны таким образом, отсутствует опасность неправильного определения различных видов Entry, пока учитываются подтип Entry, фактор времени и определенности. Обратите внимание, что даже если онтология, изображеная на рис. 18 не является правильной (несомненно, это не так), архетипы будут построены таким образом, чтобы учесть каждую более точную идею о том, какими в действительности должны быть такие категории.

*Статус клинической формулировки и логическое отрицание*
Назначение "статуса" записанным элементам - это хорошо известная проблема в сфере учета клинической информации. Виды статуса включают в себя такие варианты, как "фактическое значение Р" (Р обозначает некоторое явление), "Семейная история P", "Риск P", "Страх P", а также отрицание любого из этих статусов, то есть «не / нет P", "нет Истории P" и т.д. Подробный анализ этих, так называемых статусов, показывает, что они вовсе не являются "статусами", а представляют собой разные категории информации, что соответствует онтологии, изображенной на рис. 18. 
В целом, логические отрицания обрабатываются с помощью архетипов "исключение", назначенных для соответствующего типа Entry. Например, формулировка "нет аллергии" может быть смоделирована с помощью архетипа Evaluation (оценка), который описывает аллергии исключенные для этого пациента.

Еще одна группа типов формулировок, которая может быть перепутана в системах, не должным образом моделирующих категории информации касающиеся вмешательства, например, "Замене тазобедренного сустава (5 лет назад)", "замена тазобедренного сустава (рекомендуется)", "замена тазобедренного сустава (запланирована на следующий вторник 10 часов утра)". Все эти разновидности формулировок в недвусмысленной, точной форме относятся непосредственно к одному из типов Entry системы openEHR, гарантируя, что запрос из ЭМК не затрагивает неверные данные, такие как формулировки о страхе или риске, если были запрошены данные для получения информации о наблюдении за явлением. Более подробная информация о модели клинической информации openEHR  приводятся в документе EHR IM, в секции Entry.

h2. 6.5 Управление медицинскими вмешательствами

Ключевой частью процесса исследования показанного на рисунке 17, да и здравоохранения в целом, является  медицинское вмешательство. Определение и управление вмешательствами (будь то простейшие рецепты или сложные хирургические и терапевтические процедуры) является трудной проблемой для информационных систем, поскольку оно находится в "будущем" (это означает, что мероприятия по медицинскому вмешательству должны быть выражены при помощи детализации времени путем ветвления или цикла, а не простой линией времени наблюдения), неожиданные события могут изменить положение вещей (например, реакция пациента на лекарства) и статус данного вмешательства может быть трудноотслеживаемым, особенно в распределенных системах. Однако, с точки зрения медицинских работников, желание узнать, что за лекарства принимает пациент, с каких пор и каковы изменения, является основополагающим.

OpenEHR подходит к решению этих проблем благодаря использованию записей типа @INSTRUCTION@, составной элемент @ACTIVITY@ которых используется для указания мероприятий в будущем, и записей подтипа @ACTION@, для учета того, что уже произошло. Наиболее важные функции этой модели включают в себя:
* единый гибкий способ моделирования всех медицинских мероприятий, будь то медицинский рецепт или больничного комплексные терапевтические методы на основе стационара;
* способ узнать состояние любого вмешательства, с точки зрения состояний в стандартной схеме состояний, показанной на рис. 19; это позволяет строить запросы к ЭМК пациента стандартным способом, так, чтобы получать "все активные препараты", "все приостановлены медицинские вмешательства"и т.д.;
* способ отображения конкретных шагов процесса медицинского к стандартному состоянию схемы состояний, позволяющий медицинским работникам определять и просматривать вмешательств в понятных для них терминах;
* поддержка автоматизированного рабочего процесса, без необходимости его использования.

В сочетании с широчайшими возможностями версионирования openEHR, конструкции типа Инструкция/Действие позволяют клиницистам, использующим ЭМК, использовать распределенную систему для определения и управления медицинскими вмешательствами, сделанными пациентам.

p=. !../../en/06-design-of-the-openEHR-EHR/fig19.png!

p=. Рисунок 19. Стандартная Instruction State Machine openEHR.

h2. 6.6 Время в ЭМК

Фактор времени хорошо известная и сложная проблема моделирования в медицинской информации. В openEHR, время, являющееся побочным продуктом процесса исследования  (например, время взятия проб; время измерения показаний, время медицинских бизнес-событий, время занесения данных), описано выше и конкретно смоделированы; другие же временные измерения, специфичные для конкретного содержания (например, дата возникновения болезни, дата разложения) моделируются с помощью архитипизирования общих атрибутов данных.

На следующем рисунке показано типичное отношение времени по отношению к процессу наблюдения, и соответствующие атрибуты в рамках эталонной модели openEHR. Обратите внимание, что при различных сценариях, таких как  консультация врача общей практики, радиологической отчетности и др., временные отношения могут быть совершенно разными, чем те, что показаны на рисунке. Модель Time подробно описана в документе EHR Information Model.

p=. !../../en/06-design-of-the-openEHR-EHR/fig20.png!

p=. Рисунок 20. Время в ЭМК.

h2. 6.7 Язык

В некоторых ситуациях в ЭМК может использоваться более чем один язык. Это может быть связано с перевозкой пациентов заграницу (распространено среди скандинавских стран, между Бразилией и её северными соседями),  с прохождением пациентом лечения во время путешествия, или с тем, что в родных местах используются несколько языков.

Язык обрабатывается следующим образом в EHR openEHR. Язык по умолчанию для всей ЭМК определяется из языка операционной системы. При необходимости эти настройки могут быть включены в объект EHR_status.

Затем, выбранный язык в обязательном порядке указывается в соответствующих __language__ атрибутах в двух местах в данных ЭМК, а именно в Compositions и Entries (например, в Observations и т.д.). Это позволяет использовать в ЭМК как композиции(Compositions) различных языков в EHR, так и записи(Entry) на разных языках в составе той же композиции(Composition). 
Кроме того, в Entries, можно заполнять атрибут "язык" текстовых и закодированных текстовых элементов, если они записаны на языке, отличающимся от языка содержащего их Entry, любо если эти типы используются в других не-Entry структурах, в которых язык не указывается.

Использование этих функций, в основном может понадобиться в связи с переводом, хотя может и произойти в некоторых случаях врачебного приема в действительно многоязычной среде. В первом случае, некоторые части ЭМК, например Compositions, будут переведены до или после клинического приема чтобы сделать доступной информацию, записанную на основном языке ЭМК. Акт перевода (как и любые другие взаимодействия с ЭМК) вызовет изменения в карте, в виде новой версии. Новые переводы могут быть легко записаны в виде новой ветки версий, отходящей от версии, к которой сделан перевод. Это не является обязательным, но предоставляет удобный способ для хранения переводов таким образом, что они не заменяют оригинальный контент.