h1. 4 Принципы проектирования

Подход OpenEHR к моделированию информации, сервисов и знаний предметной области базируется на ряде принципов, описанных ниже. Применение этих принципов ведет к разделению моделей в архитектуре openEHR, и, следовательно, к разделению на высокоуровневые компоненты. В свою очередь это способствует улучшению эксплуатационной надежности, масштабируемости и гибкости развертывания.

h2. 4.1 Онтологическая классификация

Основное различие систем моделей - онтологическое, т.е. находящееся на уровне абстрактного описания реального мира. Все модели передают семантическое содержание, но не вся семантика одинакова, даже если она относится к той же категории. Например, в терминологии SNOMED-CT[4] описываются виды бактериальной инфекции, виды локализации и виды симптомов. __Информационная__ модель описывает логический тип Quantity. Модель __содержания__ определяет модель информации, собираемой врачом в дородовой осмотре. Такие виды «информации» качественно отличаются, и должны разрабатываться и поддерживаться отдельно в рамках общей эко-системы моделей. На рисунке 4 отмечены данные различия, и указаны какие части встроены непосредственно в программное обеспечение и базы данных.

p=. !4.png!

p=. *Рисунок 4* Онтологический ландшафт

Рисунок 4 показывает, базовое различие между "онтологией информации", то есть информационными моделями содержания, и "онтологией реальности", то есть описанием и классификацией реальных явлений. Их необходимо разделить на две категории, потому что авторы, работающие на ними, их представления и цели совершенно разные. По большому счету в медицинской информатике это разделение уже существует в связи с развитием терминологий и классификаций.

Второй шаг в разделении онтологии с информационной стороны проходит между моделями информации и моделями понятий предметной области. Первая категория содержит семантику, __инвариантную__ на всей предметной области (например, базовые типы данных, такие как кодированный термин (coded terms), структуры данных, такие как списки (lists), идентификаторы (identifiers)), а вторая содержит __меняющиеся__ описания из предметной области - описания информационных структур, таких как "результат микробиологического исследования" вместо описания реальных явлений в реальном мире (например, микробиологическое заражение). Такое разделение обычно не очень глубоко понимается, и исторически сложилось, что большая часть семантики предметной области жестко кодируется в программном обеспечении и в базах данных, что приводит к трудностям в поддержке систем.
 
Четко разделяя на три категории - информационные модели, модели предметной области и терминологии, архитектура openEHR точно описывает и фиксирует область действия, задает понятный интерфейс для каждой из категорий. В следствие этого уменьшается зависимость друг от друга, что ведет к лучшей управляемости и адаптируемости систем.

*Двухуровневое моделирование и архетипы*
В основании openEHR лежит парадигма "двухуровневого" моделирования ==[2]==. Под двухуровневым подходом понимается стабильная базовая модель информации на первом уровне моделирования и формализованные определения клинического содержания в виде архетипов и шаблонов на втором. __В программном обеспечении реализуется только первый уровень__ (базовая модель, Reference Model), что существенно снижает зависимость развернутых систем и данных от изменений в определениях содержания. Другая и единственна часть из всей совокупности моделей, которая реализуется в программном обеспечении, высокостабильные модели уровня представления (показано в нижней части рис 4). В следствие этого системы могут быть намного меньше по размеру и легче управляться по сравнению с одноуровневыми системами. Двухуровневые системы, построенные с использованием архетипов и шаблонов, по сути являются адаптивными системами, так как смогут использовать архетипы и шаблоны, которые появятся в будущем.

p=. !5.png!

p=. *Рисунок 5* Мета-архитектура архетипов

На этом рисунке, «данные» в типовой информационной системе (внизу слева) соответствует объектной модели (вверху слева).  Системы, разработанные по классическому пути когда вся семантика предметной области закодирована в ПО или базах данных, оказываются ограниченными. С использованием двухуровневого моделирования, данные во время выполнения семантически соответствуют как архетипам, так и базовой модели. Все архетипы описываются на обобщенном языке описания архетипов (Archetype Definition Language, ADL).

Подробности работы архетипов и шаблонов в openEHR описаны на стр. 50.

*Влияние на разработку программного обеспечения*
Двухуровневая система моделирования существенно изменяет динамику процесса разработки системы. Обычно в процессах, насыщенных IT-составляющей, требования собираются __на месте__ в процессе обсуждения с пользователями (как правило с помощью методологии "use case"), архитектура и модели, создаются на основе требований, реализация опирается на архитектуру, затем следует тестирование, развертывание и, наконец, поддержка. Такой жизненный цикл, характеризуется высокой стоимостью внедрения изменений и увеличением разрыва между возможностями системы и требованиями на определенный момент времени. Подход также плох тем, что в беседах __на месте__ с пользователями системы почти всегда не удается выявить основную суть содержания и процессов. В соответствии с двухуровневой парадигмой, основная часть системы основана на базовой модели и модели архетипов (включающие общую логику для хранения данных, запросов, кэширование и др.), которые в вышей степени стабильны, в то время как семантика полностью делегирована специалистам в предметной области, которые работают над созданием архетипов (с возможностью повторного использования), шаблонов (для локального применения) и терминологии (для общего использования). Процесс показан на рисунке 6. В рамках процесса ИТ-разработчики сосредотачиваются на общих компонентах, таких как управление данными и их переносимостью, в то время как группы экспертов в предметной области работают вне процесса разработки программного обеспечения над создания описаний, которые будут использоваться в системах во время исполнения.

p=. !6.png!

p=. *Рисунок 6* Двухуровневая разработка ПО

Понятно, что приложения не всегда являются полностью обобщенными (хотя многие приложения для сбора и просмотра данных являются таковыми), приложения поддержки принятия решений, финансово-хозяйственные, планирования и многие другие по-прежнему требуют специальной разработки. Однако все эти приложения могут положиться на вычислительную платформу на основе архетипов и шаблонов. Основным результатом такого подхода является то, что архетипы составляют технологически независимый единый источник семантики предметной области, и используется для управления схемами баз данных, логикой программного обеспечения, пользовательскими экранами (GUI), схемами сообщений и другими способами выражения семантики.

h2. 4.2 Разделение ответственности

Разделение ответственности в вычислительной среде - вторая ключевая парадигма, используемая в openEHR. Управляемость сложными предметными областями существует там, где функциональность разбивается на области, представляющие интерес, в виде «системы систем» ==[6]==. Подобный принцип в области компьютерных наук существует в течение длительного времени под названиями "слабое связывание", "инкапсуляция" и "разбиение на компоненты", которые привели созданию эффективных фреймворков и стандартов, например, спецификации OMG CORBA, и бурному развитию объектно-ориентированных языков, библиотек и фреймворков. Каждая функциональная область формирует множество моделей, формальной описывающих эту область, совокупность которых отличает одну информационную систему или сервис от других.

Рисунок 7 иллюстрирует условную медицинскую информационную среду с множеством сервисов, каждый из которых обозначен овальным элементом на блок-схеме. Связи обозначаются линиями, и элементы, расположенные ближе к центру, соответствуют сервисам близким к базовым потребностям при оказании медицинской помощи, таким, как ЭМК, терминологии, демографические, идентификационные и медицинские данные. Из сервисов, показанных на рисунке, в openEHR в настоящее время есть спецификации только для центральных, например ЭМК и демографический сервис.

Существуют стандарты, закрывающие некоторые аспекты из множества сервисов, такие как, терминологии, форматы изображений, сообщений, экспорт из ЭМК (EHR Extracts), сервисное взаимодействие, а также многочисленные стандарты для таких деталей как, форматы даты / времени и кодировки строк, поэтому спецификация openEHR является механизмом интеграции существующих стандартов.

h2. 4.3 Разделение точек зрения

__Разделение точек зрения__, естественно следующее из разделения ответственности, является третьей вычислительной парадигмой в openEHR. Когда ответственность разделена между различными компонентами, необходимо определить a) обрабатываемую информацию, и b) взаимодействие. Данные два аспекта модели представляют собой две центральных "точки зрения" ISO RM/ODP ==[4]== (выделены жирным шрифтом):

__Организационная__: связанна с бизнес деятельностью, то есть цели, границы и принципы работы системы.

*__Информационная__*: связана с семантикой информации, которая должна храниться и обрабатываться в системе.

*__Вычислительная__*: связана с описание системы в виде набора объектов, которые взаимодействуют через интерфейсы, что делает систему распределенной.

__Инженерная__: связана с механизмами поддержки распределенной системы.

__Технологическая__: связана с детализацией компонент, из которых строится распределенная система.

Спецификация OpenEHR включает информационную точку зрения - базовая модель openEHR (RM) и вычислительную точку зрения - сервисная модель openEHR (SM). Инженерная точка зрения описывается в технологии реализации спецификации (ITS) openEHR (см. технологии реализации спецификации на стр. 77), и технологической точки зрения соответствует множество технологий и компонентов, используемых в фактическом развертывании. Важным аспектом разделения на несколько точек зрения является то, что не существует соотношения 1:1 между спецификациями моделей для каждой точки зрения. Например, с организационной точки зрения может быть понятие "мандат здоровья" (CEN ENV13940 Continuity of Care concept). С информационной точки зрения, понятие становится моделью, содержащей множество классов. С вычислительной точки зрения, структуры, определенные в информационной точки зрения, потребуются в множестве сервисов. Как может быть, так может и не быть сервиса "мандат здоровья". Детализация сервисов на уровне вычислительной точки зрения, наиболее точно соответствуют разделению на функции в организации, в то время как степень детализации компонент в информационных точках зрения соответствует смысловым понятиям в предметной области.

fn4. См. "http://www.snomed.org":http://www.snomed.org

p=. !7.png!

p=. Рисунок 7