h1. 5 openEHR Структура пакета

h2. 5.1 Обзор

ИЗОБРАЖЕНИЕ 8 иллюстрирует структуру пакетов официальных спецификаций openEHR. Три основных пакета: rm, am и sm. Остальные классы представлены внутри данных пакетов, данные пакеты могут так же рассматриваться как пространства имен. Они концептуально обьеденины в пространство имен org.openehr, которое может быть представлено в UML как вложенные пакеты. В некоторых реализациях (например Java), пространство имен org.openehr может использоваться в текстах программ.

p=. !8.png!

p=. *ИЗОБРАЖЕНИЕ 8* Общая структура пакетов openEHR

Одна из важных целей проекта openEHR заключается в обеспечении согласованной, последовательной и повторного используемой системы типов для научных и медицинских вычислений. Таким образом, ‘core’ в RM (нижний слой на схеме) содержит идентификаторы, типы данных, структуры данных и различные общие шаблоны проектирования, которые могут быть использованы в верхних слоях RM,  а так же в AM и SM пакетах. ИЗОБРАЖЕНИЕ 9 иллюстрирует отношения между пакетами. Зависимости пакетов осуществляется от верхних к нижним.

p=. !9.png!

p=. *ИЗОБРАЖЕНИЕ 9* Структура пакетов openEHR

h2. 5.2 Reference Model (RM)

Каждый пакет определяет локальный контекст для определений классов. На рисунке 10 показана структура пакета RM. Неофициально пакет разделен на “domain”, “patterns” и “core”. Пакеты в последней группе универсальные, они используются во всех моделях openEHR и во внешних пакетах. Вместе они реализуют: идентификацию, доступ к источникам знаний, типы и структуры данных, семантику версий и поддержку архитипизирования. Пакеты в первой группе определяют семантику типов медицинской информации enterprise уровня, включая EHR и демографию.

Каждый внешний пакет на ИЗОБРАЖЕНИИ 10 соответствует одному документу[1] спецификации openEHR, они описаны в "информационной модели" (IM). Структура пакетов может быть воспроизведена во всех ITS представлениях, например в виде XML схемы, реализована на  языках программирования таких как Java, C#, и Eiffel, или представлена с помощью  WSDL, IDL и .Net.

h3. 5.2.1 Package Overview

В следующих разделах дается краткий обзор RMпакетов.

*Support Information Model*
Этот пакет описывает самые основные понятия, необходимые для других пакетов, и состоит из следующих пакетов: Definitions, Identification, Terminology и Measurement. Семантика определенная в этих пакетах позволят всем другим моделям использовать идентификаторы и иметь доступ к сервисам данных, таким как терминология и другим справочным данным. Пакет support включает в себя специальный пакет assumed_types, который описывает базовые типы допустимые в openEHR из внешних систем; этот пакет представляет собой руководство для интеграции openEHR моделей в надлежащем виде во внешних системах.

*Data Types Information Model*
Список четко определенных типов данных, который лежит в основе всех других моделей, а также предоставляет ряд общих и клинически специфичных типов необходимых для описания всех видов медицинской информации. Следующие категории типов данных, определенны в reference model.

* Text: простой текст, кодированный текст, параграфы.
* Quantities: любой упорядоченный тип включая порядковые номера(используется для представления  символьных упорядоченных значений таких как “+”, “++”, “+++”), измеряемых величин со значениями и единицами, и так далее.
* Date/times: дата, время, дата-время, и частей типов даты и времени.
* Encapsulated data: мультимедиа, интерпретируемое содержимое.
* Basic types: boolean, переменные состояния.

*Data Structures Information Model*
В информационной модели openEHR, общие структуры данных используются для представления содержимого которое будет использовано в архетипе. Ниже представлены эти структуры данных.

* Single: отдельные элементы, используемые для хранения * единственного значения, таких, как рост или вес. 
* List: линейные списки именованных элементов, таких как множество патологических результатов тестов.
* Table: табличные значения, включая неограниченные и ограниченные размеры таблиц с именованными и сортируемыми колонками, и именованными строками.
* Tree: древовидные данные, которые могут быть в виде вложенных списков, или других вложенных  структур.
* History: временной ряд, каждая точка времени может содержать структуру данных любой сложности, из описанных выше типов. Поддерживается точка и интервал.

p=. !10.png!

p=. *ИЗОБРАЖЕНИЕ 10* Структур пакета org.openehr.rm

*Common Information Model*
Некоторые понятия повторяются в пакетах верхнего уровня. Классы LOCATABLE и ARCHETYPED обеспечивают связь между information models и archetype models. Классы ATTESTATION и PARTICIPATION являются общими понятиями домена и присутствуют в различных archetype models.
Пакет change_control определяет формальную модель управления изменениями и версиями, которая относится к любой службе, которая должна быть в состоянии предоставлять предыдущие состояния ее информации, в частности сервис демографии и EHR. Ключевые понятия версионирования в openEHR описаны в разделе 8 на стр. 42.

*Security Information Model*
Security Information Model определяет ключевые понятия контроля доступа и настройки конфиденциальности информации в EHR.

*EHR Information Model*
EHR IM определяет ограничение и основные понятия концепций EHR, COMPOSITION, SECTION, и ENTRY. Эти классы являются базовыми компонентами EHR и прямо соответствуют классам, с теми же именами в CEN EN13606:2005  и довольно близко к "уровням" с теми же именами в HL7 Clinical Document Architecture (CDA) релиз 2.0.

*EHR Extract Information Model*
EHR Extract IM определяет как EHR извлекает информацию из композиций, демографии,  а так же  контроль доступа информации из EHR. Извлечение данных включает “полный openEHR”, упращенную форму для интеграции с CEN EN13606 и для синхронизации openEHR/openEHR.

*Integration Information Model*
Integration Model определяет класс GENERIC_ENTRY, подтип ENTRY используется для представления в свободной форме наследства или внешних данных в виде дерева. Тип Entry имеет  собственные архетипы, известные как "интеграционные архетипы", они могут быть использованы совместно с клиническими архетипами в качестве основы для инструментальных  интеграционных систем. См. раздел 14 на стр. 73 для более подробной информации.

*Demographics Information Model*
Demographics Model определяет общие понятия PARTY, ROLE и сопутствующие данные, такие как контактные адреса. Модель архетипа определяет ограничения PARTY, позволяя архетипам описывать любых людей, организации, голи и отношения ролей. Такой подход обеспечивает гибкий способ включая произвольных демографических атрибутов использованных в  OMG HDTF PIDS стандартах.

*Workflow Information Model (future)*
Workflow это динамическая сторона лечебного процесса и состоит из моделей описания процессов, таких как повторные вызовы, как и любой процесс ухода это исполнение инструкций.

h2. 5.3 Archetype Model (AM)

Пакет openEHR am содержит модели, необходимые для описания семантики архетипов и шаблонов, а также их использование в рамках openEHR. К ним относятся ADL, Archetype Definition Language
(выраженный в виде синтаксических спецификации), пакетов archetype и template, определяют объектно-ориентированную семантику архетипов и шаблонов, а также пакет openehr_profile, который определяет профиль общей модели архетипов определенной в пакете archetype, для использования в openEHR (и других медицинских вычислений). Внутренняя структура пакета am показана на рисунке 11.

p=. !11.png!

p=. *ИЗОБРАЖЕНИЕ 11* Структура пакета org.openehr.am

h2. 5.4 Service Model (SM)

Модель openEHR service включает в себя определение основных сервисов медицинской информации, сконцентрированной вокруг EHR. Это показано на ИЗОБРАЖЕНИИ 12. Набор сервисов несомненно, будет развиваться с течением времени, так что эта схема не должна рассматриваться как окончательная.

*Virtual EHR API*
Виртуальные EHR API определяет интерфейс для доступа к EHR данным, на уровне композиции и ниже. Это позволяет программе создавать новую информацию в EHR,  получать части существующих EHR и изменять их. Это API позволяет манипулировать данными из части архетипа. Изменения в EHR совершаются через службу EHR.

*EHR Service Model*
Модель EHR Service определяет интерфейс для сервиса электронной медицинской записи. Уровень детализации openEHR Contributions взносам и Compositions, т.е. контроль версий / изменение набора интерфейсов.

Часть модели определяет семантику запросов на стороне сервера, т.е. запросы, которые вызывают большие объемы данных, подлежащих обработке, как правило, возвращаются небольшые агрегированные ответы, такие, как средние значения, или набор идентификаторов пациентов, соответствующих определенному критерию.

*Archetype Service Model*
Сервис модели архетипа определяет интерфейс к онлайн-хранилищу архетипов, и может использоваться как приложениями с графическим интерфейсом предназначен для просмотра человеком, а также для доступа из других программных сервисов, таких как EHR.

*Terminology Interface Model*
Интерфейс терминологий  предоставляет средства доступа для других сервисов к любой терминологии, доступной в среде медицинской информации, в том числе основные словари классификаций, такие как ICDx и ICPC, а также более продвинутые онтологии на основе терминологии.
Следуя концепции разделения обязанностей для связи система-система, терминологический интерфейс позволяет абстрагироваться от различных базовых архитектур каждой терминологии, позволяя другим сервисам получить доступ стандартным способом. Сервис терминологий это шлюз для онтологических и терминологических сервисов в окружающей среде, которые наряду с сервисами для доступа к инструкциям, лекарствам и другим "справочным данным" позволяют делать логические выводы и обеспечивает помощь в принятии принятия решений будет осуществляться в окружающей среде.

p=. !12.png!

p=. *ИЗОБРАЖЕНИЕ 12* Структура пакета org.openehr.sm

# За исключением EHR и пакетов Composition, данные пакеты описаны в документе EHR Reference Model 
